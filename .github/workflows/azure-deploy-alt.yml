# Alternative Azure deployment workflow using Service Principal authentication
# Use this if OIDC authentication fails

name: Build and deploy ROI Analyze app to Azure Web App (Service Principal)

on:
  workflow_dispatch:  # Manual trigger only for testing

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install root dependencies
        run: npm install

      - name: Install workspace dependencies
        run: |
          npm install --workspace=packages/backend
          npm install --workspace=packages/client

      - name: Build for Azure deployment
        run: |
          chmod +x ./build-for-azure.sh
          ./build-for-azure.sh

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: roianalyze-app
          path: deploy/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: roianalyze-app
          path: ./deploy

      - name: List downloaded files and prepare for deployment
        run: |
          echo "=== Downloaded files in deploy directory ==="
          ls -la deploy/
          echo "=== Moving files to root for deployment ==="
          mv deploy/* .
          rm -rf deploy/
          echo "=== Final deployment structure ==="
          ls -la

      - name: Install production dependencies
        run: |
          npm install --production --omit=dev

      - name: Deploy to Azure Web App (using publish profile)
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'cyfnodetest'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_CYFNODETEST }}
          package: .

      - name: Verify deployment
        run: |
          echo "=== Deployment completed ==="
          echo "Health check URL: https://cyfnodetest.azurewebsites.net/health"
          echo "App URL: https://cyfnodetest.azurewebsites.net/"
          
          # Wait a bit for deployment to be ready
          sleep 30
          
          # Test health endpoint
          curl -f https://cyfnodetest.azurewebsites.net/health || echo "Health check failed - this is normal for first deployment"
